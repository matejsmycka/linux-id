package sitesignatures

import (
	"crypto/sha256"
	"fmt"
)

// from https://github.com/danstiner/rust-u2f/blob/master/u2f-core/src/known_app_ids.rs
// and https://github.com/github/SoftU2F/blob/master/SoftU2FTool/KnownFacets.swift
// and https://github.com/cowboyrushforth/verifidod/blob/main/sitesignatures/sitesignatures.go
var reverseSignatures = map[[32]byte]string{
	hashURL("https://api-9dcf9b83.duosecurity.com"):             "duosecurity.com",
	hashURL("https://dashboard.stripe.com"):                     "dashboard.stripe.com",
	hashURL("https://demo.yubico.com"):                          "demo.yubico.com",
	hashURL("https://github.com/u2f/trusted_facets"):            "github.com",
	hashURL("https://gitlab.com"):                               "gitlab.com",
	hashURL("https://id.fedoraproject.org/u2f-origins.json"):    "id.fedoraproject.org",
	hashURL("https://keepersecurity.com"):                       "keepersecurity.com",
	hashURL("https://lastpass.com"):                             "lastpass.com",
	hashURL("https://mdp.github.io"):                            "mdp.github.io",
	hashURL("https://personal.vanguard.com"):                    "vanguard.com",
	hashURL("https://u2f.aws.amazon.com/app-id.json"):           "aws.amazon.com",
	hashURL("https://u2f.bin.coffee"):                           "u2f.bin.coffee",
	hashURL("https://vault.bitwarden.com/app-id.json"):          "vault.bitwarden.com",
	hashURL("https://www.dropbox.com/u2f-app-id.json"):          "dropbox.com",
	hashURL("https://www.fastmail.com"):                         "www.fastmail.com",
	hashURL("https://www.gstatic.com/securitykey/origins.json"): "google.com",

	// Add Okta-related entries
	hashURL("https://okta.com"):           "okta.com",
	hashURL("https://login.okta.com"):     "okta.com",
	hashURL("https://dev-12345.okta.com"): "okta.com",
	hashURL("https://pura.okta.com"):      "okta.com",
	hashURL("pura.okta.com"):              "okta.com",

	// Add entries from logs for this specific environment
	// These are appearing as "unknown" in our logs
	{0xb7, 0xd9, 0xed, 0xf4, 0xa4, 0xb6, 0xa6, 0x3e, 0xb6, 0x23, 0x14, 0x50, 0x38, 0xe7, 0x84, 0x4f, 0x25, 0xb0, 0x81, 0x2b, 0xfb, 0xa9, 0xa7, 0xab, 0x24, 0x50, 0x20, 0x20, 0x78, 0xca, 0x80, 0x7b}: "okta.com",   // Direct Okta login
	{0xae, 0xb4, 0x66, 0x06, 0x94, 0x44, 0xc0, 0xd5, 0xf7, 0x30, 0xf2, 0xdc, 0xe0, 0x23, 0xcf, 0x2a, 0x7a, 0x3c, 0x04, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}: "okta.com",   // Found in error logs
	{0xdd, 0x4a, 0x83, 0x91, 0x42, 0x63, 0x6b, 0x9a, 0xc7, 0xfb, 0xaa, 0xa5, 0xe8, 0xa9, 0x87, 0x01, 0xd0, 0x2c, 0xf8, 0xd9, 0x08, 0x39, 0x8f, 0x30, 0xc4, 0xa5, 0x7a, 0x98, 0xe7, 0x52, 0xb1, 0x65}: "okta.sso",   // GitHub SSO to Okta
	{0xdf, 0xab, 0x33, 0xf2, 0xad, 0xb1, 0xd2, 0x2f, 0x22, 0x81, 0x9c, 0x3b, 0x3f, 0xfd, 0x0c, 0x91, 0x8e, 0xd2, 0x31, 0x48, 0x35, 0x7a, 0x9f, 0xee, 0x6a, 0xba, 0x12, 0x93, 0x75, 0xe6, 0x22, 0x15}: "okta.com",   // Another Okta pattern
	{0xe8, 0x45, 0x41, 0xea, 0xf2, 0x07, 0xf7, 0xd7, 0x5a, 0xd0, 0x51, 0x43, 0x47, 0x70, 0xf6, 0xd1, 0xa9, 0xbf, 0x62, 0xf7, 0xea, 0x9b, 0xe5, 0x14, 0xfd, 0x4e, 0x0c, 0xa8, 0x27, 0x2b, 0x1d, 0xeb}: "github.com", // GitHub origin
	{0x38, 0xab, 0x1c, 0xad, 0xb8, 0x19, 0xa7, 0x7d, 0x35, 0xc5, 0x0c, 0x30, 0x4b, 0x9e, 0xc9, 0xdf, 0x3c, 0x1d, 0x5c, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}: "github.com", // From latest log
	{0xd4, 0xc9, 0xd9, 0x02, 0x73, 0x26, 0x27, 0x1a, 0x89, 0xce, 0x51, 0xfc, 0xaf, 0x32, 0x8e, 0xd6, 0x73, 0xf1, 0x7b, 0xe3, 0x34, 0x69, 0xff, 0x97, 0x9e, 0x8a, 0xb8, 0xdd, 0x50, 0x1e, 0x66, 0x4f}: "google.com", // Google origin

	hashURL("bin.coffee"):          "bin.coffee",
	hashURL("coinbase.com"):        "coinbase.com",
	hashURL("demo.yubico.com"):     "demo.yubico.com",
	hashURL("github.com"):          "github.com",
	hashURL("webauthn.bin.coffee"): "webauthn.bin.coffee",
	hashURL("webauthn.io"):         "webauthn.io",
}

func hashURL(url string) [32]byte {
	return sha256.Sum256([]byte(url))
}

func FromAppParam(sig [32]byte) string {
	site := reverseSignatures[sig]
	if site == "" {
		site = "<unknown> {"
		for i, b := range sig {
			if i > 0 {
				site += ", "
			}
			site += fmt.Sprintf("0x%02x", b)
		}
		site += "}"
	}
	return site
}
